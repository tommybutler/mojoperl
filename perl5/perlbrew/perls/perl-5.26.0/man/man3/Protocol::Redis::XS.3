.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Protocol::Redis::XS 3"
.TH Protocol::Redis::XS 3 "2019-12-25" "perl v5.26.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Protocol::Redis::XS \- hiredis based parser compatible with Protocol::Redis
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&  use Protocol::Redis::XS;
\&  my $redis = Protocol::Redis::XS\->new(api => 1);
\&  $redis\->parse("+OK\er\en");
\&  $redis\->get_message;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This provides a fast parser for the Redis protocol using the code from
hiredis <https://github.com/redis/hiredis> and with \s-1API\s0 compatibility with
Protocol::Redis.
.PP
(If you've found yourself here just looking to use Redis in Perl: This is a low
level parsing module, you probably want to look at the modules mentioned in
\&\*(L"\s-1SEE ALSO\*(R"\s0 first.)
.SH "METHODS"
.IX Header "METHODS"
As per Protocol::Redis, \s-1API\s0 version 1.
.SS "parse"
.IX Subsection "parse"
Parse a chunk of data (calls \*(L"on_message\*(R" callback if defined and a complete
message is received).
.SS "get_message"
.IX Subsection "get_message"
Return a message. This is a potentially nested data structure, for example as
follows:
.PP
.Vb 9
\&  {
\&    type => \*(Aq*\*(Aq,
\&    data => [
\&      {
\&        type => \*(Aq$\*(Aq,
\&        data => \*(Aqhello\*(Aq
\&      }
\&    ]
\&  }
.Ve
.SS "on_message"
.IX Subsection "on_message"
Set callback for \*(L"parse\*(R".
.SH "THREADS"
.IX Header "THREADS"
This module will work on a threaded perl and will work with threads, however
instances of Protocol::Redis should not be shared between threads.
.SH "SUPPORT"
.IX Header "SUPPORT"
.SS "\s-1IRC\s0"
.IX Subsection "IRC"
#redis on irc.perl.org <irc://irc.perl.org/redis>
.SH "DEVELOPMENT"
.IX Header "DEVELOPMENT"
See github: <https://github.com/dgl/protocol\-redis\-xs>.
.SH "AUTHOR"
.IX Header "AUTHOR"
David Leadbeater <dgl@dgl.cx>
.PP
With thanks to Sergey Zasenko <undef@cpan.org> for the original
Protocol::Redis and defining the \s-1API.\s0
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2011 David Leadbeater.
.PP
This program is free software; you can redistribute it and/or modify it under
the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Redis, Redis::hiredis, Mojo::Redis, AnyEvent::Redis,
Protocol::Redis.
