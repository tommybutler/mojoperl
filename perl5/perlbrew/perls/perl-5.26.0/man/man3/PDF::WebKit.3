.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "PDF::WebKit 3"
.TH PDF::WebKit 3 "2018-02-21" "perl v5.26.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PDF::WebKit \- Use WebKit to Generate PDFs from HTML (via wkhtmltopdf)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use PDF::WebKit;
\&
\&  # PDF::WebKit\->new takes the HTML and any options for wkhtmltopdf
\&  # run \`wkhtmltopdf \-\-extended\-help\` for a full list of options
\&  my $kit = PDF::WebKit\->new(\e$html, page_size => \*(AqLetter\*(Aq);
\&  push @{ $kit\->stylesheets }, "/path/to/css/file";
\&
\&  # Get an inline PDF
\&  my $pdf = $kit\->to_pdf;
\&
\&  # save the PDF to a file
\&  my $file = $kit\->to_file(\*(Aq/path/to/save/pdf\*(Aq);
\&
\&  # PDF::WebKit can optionally accept a URL or a File
\&  # Stylesheets cannot be added when source is provided as a URL or File.
\&  my $kit = PDF::WebKit\->new(\*(Aqhttp://google.com\*(Aq);
\&  my $kit = PDF::WebKit\->new(\*(Aq/path/to/html\*(Aq);
\&
\&  # Add any kind of option through meta tags
\&  my $kit = PDF::WebKit\->new(\e\*(Aq<html><head><meta name="pdfkit\-page_size" content="Letter"...\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
PDF::WebKit uses wkhtmltopdf <http://code.google.com/p/wkhtmltopdf/> to
convert \s-1HTML\s0 documents into PDFs. It is a port of the elegant
PDFKit <https://github.com/jdpace/PDFKit> Ruby library.
.PP
wkhtmltopdf generates beautiful PDFs by leveraging the rendering power
of Qt's WebKit browser engine (used by both Apple Safari and Google
Chrome browsers).
.SS "Configuration"
.IX Subsection "Configuration"
Configuration of PDF::WebKit is configured globally by calling the
\&\f(CW\*(C`PDF::WebKit\->configure\*(C'\fR class method:
.PP
.Vb 3
\&  PDF::WebKit\->configure(sub {
\&    # default \`which wkhtmltopdf\`
\&    $_\->wkhtmltopdf(\*(Aq/path/to/wkhtmltopdf\*(Aq);
\&
\&    # default \*(Aqpdf\-webkit\-\*(Aq
\&    $_\->meta_tag_prefix(\*(Aqmy\-prefix\-\*(Aq);
\&
\&    $_\->default_options\->{\*(Aq\-\-orientation\*(Aq} = \*(AqPortrait\*(Aq;
\&  });
.Ve
.PP
See the new method for the standard default options.
.SS "Constructor"
.IX Subsection "Constructor"
.IP "new($SOURCE_URL,%OPTIONS)" 4
.IX Item "new($SOURCE_URL,%OPTIONS)"
.PD 0
.IP "new($SOURCE_FILENAME,%OPTIONS)" 4
.IX Item "new($SOURCE_FILENAME,%OPTIONS)"
.IP "new(\e$SOURCE_HTML,%OPTIONS)" 4
.IX Item "new($SOURCE_HTML,%OPTIONS)"
.PD
Creates and returns a new instance. If the first parameter looks like a
\&\s-1URL,\s0 it is treated as a \s-1URL\s0 and handed off to wkhtmltopdf verbatim. If
it is is a reference to a scalar, it is an \s-1HTML\s0 document body.
Otherwise, the parameter is interpreted as a filename.
.Sp
The \f(CW%OPTIONS\fR hash is a list of name/value pairs for command-line
options to wkhtmltopdf. These options can augment or override the
default options. For options with no associated value, pass \*(L"\s-1YES\*(R"\s0 (case
insensitive) as the value, e.g. \f(CW\*(C`grayscale => "YES"\*(C'\fR.
.Sp
The default options are:
.Sp
.Vb 6
\&  \-\-page\-size     Letter
\&  \-\-margin\-top    0.75in
\&  \-\-margin_right  0.75in
\&  \-\-margin_bottom 0.75in
\&  \-\-margin_left   0.75in
\&  \-\-encoding      UTF\-8
.Ve
.SS "Methods"
.IX Subsection "Methods"
.IP "command" 4
.IX Item "command"
Returns the list of command-line arguments that would be used to execute
wkhtmltopdf.
.IP "to_pdf" 4
.IX Item "to_pdf"
Processes the source material and returns a \s-1PDF\s0 as a string.
.IP "to_file($PATH)" 4
.IX Item "to_file($PATH)"
Processes the source material and creates a \s-1PDF\s0 at \f(CW$PATH\fR. Returns a
filehandle opened on \f(CW$PATH\fR.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
PDFKit <https://github.com/jdpace/PDFKit>,
wkhtmltopdf <http://code.google.com/p/wkhtmltopdf/>,
\&\s-1WKHTMLTOPDF\s0 <http://search.cpan.org/~tbr/WKHTMLTOPDF-0.02/lib/WKHTMLTOPDF.pm>
(a lower-level wrapper for wkhtmltopdf).
.SH "AUTHOR"
.IX Header "AUTHOR"
Philip Garrett <philip.garrett@icainformatics.com>
.SH "CONTRIBUTORS"
.IX Header "CONTRIBUTORS"
Christian Walde <walde.christian@gmail.com>
.SH "CONTRIBUTING"
.IX Header "CONTRIBUTING"
If you'd like to contribute, just fork my repository on Github, commit
your changes and send me a pull request.
.PP
http://github.com/kingpong/perl\-PDF\-WebKit
.SH "ACKNOWLEDGMENTS"
.IX Header "ACKNOWLEDGMENTS"
This code is nearly a line-by-line port of Jared Pace's PDFKit.
https://github.com/jdpace/PDFKit
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright (c) 2011 by Informatics Corporation of America.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.8 or,
at your option, any later version of Perl 5 you may have available.
