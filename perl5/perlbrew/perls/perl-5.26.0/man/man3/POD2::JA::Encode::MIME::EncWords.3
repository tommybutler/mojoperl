.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "POD2::JA::Encode::MIME::EncWords 3"
.TH POD2::JA::Encode::MIME::EncWords 3 "2013-10-29" "perl v5.26.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Encode::MIME::EncWords~[ja] \- MIME の「B」・「Q」ヘッダエンコーディング (代替案)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Encode::MIME::EncWords;
\&    use Encode qw/encode decode/;
\&    
\&    # ヘッダデコードする。
\&    $utf8   = decode(\*(AqMIME\-EncWords\*(Aq, $header);
\&    
\&    # 初期のキャラクタセット (UTF\-8) でヘッダエンコードする。
\&    $header = encode(\*(AqMIME\-EncWords\*(Aq, $utf8);
\&    
\&    # ほかのキャラクタセットでヘッダエンコードする。
\&    Encode::MIME::EncWords\->config(Charset => \*(AqGB2312\*(Aq);
\&    $header = encode(\*(AqMIME\-EncWords\*(Aq, $utf8);
.Ve
.SH "ABSTRACT"
.IX Header "ABSTRACT"
このモジュールは、RFC 2047 に述べる
\&\s-1MIME\s0 のヘッダエンコーディングを実装している。
エンコーディングの名前には、みっつの変種と、
キャラクタセットに特化したひとつの簡易版がある。
.PP
.Vb 6
\&  エンコーディング名         encode() の結果        備考
\&  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&  MIME\-EncWords              (B と Q を自動判別)
\&  MIME\-EncWords\-B            =?XXXX?B?...?=         初期値は UTF\-8。
\&  MIME\-EncWords\-Q            =?XXXX?Q?...?=                ,,
\&  MIME\-EncWords\-ISO_2022_JP  =?ISO\-2022\-JP?B?...?=
.Ve
.PP
\&\fIdecode()\fR の結果は、どのエンコーディングでも同じになる。
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
このモジュールは、Encode::MIME::Header コアモジュールが提供する
\&\f(CW\*(C`MIME\-*\*(C'\fR エンコーディングの代替となることを意図している。
このモジュールの使いかたをよく知るためには、Encode を参照してほしい。
.SS "モジュール独自の機能"
.IX Subsection "モジュール独自の機能"
.IP "config(\s-1KEY\s0 => \s-1VALUE, ...\s0);" 4
.IX Item "config(KEY => VALUE, ...);"
\&\fIクラスメソッド。\fR
\&\s-1KEY\s0 => \s-1VALUE\s0 の対でオプションを設定する。
次のオプションが使える。
.RS 4
.IP "Charset" 4
.IX Item "Charset"
[encode] データ要素を変換するのに使うキャラクタセット。
初期値は \f(CW"UTF\-8"\fR。
\&\f(CW\*(C`MIME\-EncWords\-ISO_2022_JP\*(C'\fR では \f(CW"ISO\-2022\-JP"\fR に固定。
.IP "Detect7bit" 4
.IX Item "Detect7bit"
[decode/encode] エンコードされていない部分の
7 ビットキャラクタセットを判別しようとする。
初期値は \f(CW"YES"\fR。
.IP "Field" 4
.IX Item "Field"
[encode] ヘッダフィールドの名前。エンコードされた結果の最初の行で、
これの長さが考慮される。
初期値は \f(CW\*(C`undef\*(C'\fR。
.IP "Mapping" 4
.IX Item "Mapping"
[decode/encode] キャラクタセットの名前に対して実際に使うマッピングを指定する。
初期値は \f(CW"EXTENDED"\fR。
.IP "MaxLineLen" 4
.IX Item "MaxLineLen"
[encode] 行の最大長 (改行を除く)。
初期値は \f(CW76\fR。
.IP "Minimal" 4
.IX Item "Minimal"
[encode] エンコーディングを最小限にするか否か。
初期値は \f(CW"YES"\fR。
.RE
.RS 4
.Sp
オプションの詳細については MIME::EncWords~[ja] を参照。
.RE
.SH "CAVEAT"
.IX Header "CAVEAT"
.IP "\(bu" 4
\&\s-1MIME\s0 ヘッダエンコーディング用のエンコーディングモジュールは、
こみいったヘッダフィールドを簡単に作り出したり、
そこから望みの要素を取り出したりできる打ち出の小槌ではない。
.Sp
アドレスヘッダフィールド (To:、From: など) をデコードするには、
まず mailbox-list を分解する。
そして、個々の要素をエンコーディングモジュールでデコードする。
これをエンコードするには、
今度は個々の要素をエンコーディングモジュールでエンコードする。
そして、エンコードした要素から mailbox-list を組み立てる。
mailbox-list の組み立てや分解には、Mail::Address
のようなモジュールが使えるだろう。
.IP "\(bu" 4
行を \s-1LF\s0 (\f(CW"\en"\fR) で区切る。
\&\s-1RFC5322\s0 は、インターネットのメッセージでは行を \s-1CRLF\s0 (\f(CW"\er\en"\fR)
で区切るとしている。
.SH "BUGS"
.IX Header "BUGS"
バグやバグのような動作は開発者に知らせてください。
.PP
\&\s-1CPAN\s0 Request Tracker:
<http://rt.cpan.org/Public/Dist/Display.html?Name=MIME\-EncWords>.
.SH "VERSION"
.IX Header "VERSION"
\&\f(CW$VERSION\fR 変数を参照してほしい。
.PP
\&\fBこれは実験的なリリースである\fR。仕様は近い将来、変わるかもしれない。
.PP
このパッケージの開発版が次の場所にある。
<http://hatuka.nezumi.nu/repos/MIME\-EncWords/>。
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Encode, Encode::MIME::Header, MIME::EncWords~[ja].
.PP
\&\s-1RFC 2047\s0 \fI\s-1MIME\s0 (Multipurpose Internet Mail Extensions) Part Three:
Message Header Extensions for Non-ASCII Text\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Hatuka*nezumi \- \s-1IKEDA\s0 Soji <hatuka(at)nezumi.nu>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2011 Hatuka*nezumi \- \s-1IKEDA\s0 Soji.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
