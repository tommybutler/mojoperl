.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Encode::MIME::EncWords 3"
.TH Encode::MIME::EncWords 3 "2013-10-29" "perl v5.26.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Encode::MIME::EncWords \-\- MIME 'B' and 'Q' header encoding (alternative)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    use Encode::MIME::EncWords;
\&    use Encode qw/encode decode/;
\&    
\&    # decode header:
\&    $utf8   = decode(\*(AqMIME\-EncWords\*(Aq, $header);
\&    
\&    # encode header with default charset, UTF\-8:
\&    $header = encode(\*(AqMIME\-EncWords\*(Aq, $utf8);
\&    
\&    # encode header with another charset:
\&    Encode::MIME::EncWords\->config(Charset => \*(AqGB2312\*(Aq);
\&    $header = encode(\*(AqMIME\-EncWords\*(Aq, $utf8);
.Ve
.SH "ABSTRACT"
.IX Header "ABSTRACT"
This module implements \s-1MIME\s0 header encoding described in \s-1RFC 2047.\s0
There are three variant encoding names and one shorthand special to a
charset:
.PP
.Vb 6
\&  Encoding name              Result of encode()     Comment
\&  \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&  MIME\-EncWords              (auto\-detect B or Q)
\&  MIME\-EncWords\-B            =?XXXX?B?...?=         Default is UTF\-8.
\&  MIME\-EncWords\-Q            =?XXXX?Q?...?=                ,,
\&  MIME\-EncWords\-ISO_2022_JP  =?ISO\-2022\-JP?B?...?=
.Ve
.PP
All encodings generate the same result by \fIdecode()\fR.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module is intended to be an alternative of \f(CW\*(C`MIME\-*\*(C'\fR encodings
provided by Encode::MIME::Header core module.
To find out how to use this module in detail, see Encode.
.SS "Module specific feature"
.IX Subsection "Module specific feature"
.IP "config(\s-1KEY\s0 => \s-1VALUE, ...\s0);" 4
.IX Item "config(KEY => VALUE, ...);"
\&\fIClass method.\fR
Set options by \s-1KEY\s0 => \s-1VALUE\s0 pairs.
Following options are available.
.RS 4
.IP "Charset" 4
.IX Item "Charset"
[encode] Name of character set by which data elements will be converted.
Default is \f(CW"UTF\-8"\fR.
On \f(CW\*(C`MIME\-EncWords\-ISO_2022_JP\*(C'\fR it is fixed to \f(CW"ISO\-2022\-JP"\fR.
.IP "Detect7bit" 4
.IX Item "Detect7bit"
[decode/encode] Try to detect 7\-bit charset on unencoded portions.
Default is \f(CW"YES"\fR.
.IP "Field" 4
.IX Item "Field"
[encode] Name of the header field which will be considered on the first line
of encoded result in its length.
Default is \f(CW\*(C`undef\*(C'\fR.
.IP "Mapping" 4
.IX Item "Mapping"
[decode/encode] Specify mappings actually used for charset names.
Default is \f(CW"EXTENDED"\fR.
.IP "MaxLineLen" 4
.IX Item "MaxLineLen"
[encode] Maximum line length excluding newline.
Default is \f(CW76\fR.
.IP "Minimal" 4
.IX Item "Minimal"
[encode] Whether to do minimal encoding or not.
Default is \f(CW"YES"\fR.
.RE
.RS 4
.Sp
For more details about options see MIME::EncWords.
.RE
.SH "CAVEAT"
.IX Header "CAVEAT"
.IP "\(bu" 4
The encoding modules for \s-1MIME\s0 header encoding are not the
magic porridge pot to cook complex header fields properly.
.Sp
To decode address header fields (From:, To:, ...), at first parse
mailbox-list; then decode each element by encoding module.
To encode them, at first encode each element by encoding module; then
construct mailbox-list of encoded elements.
To construct or parse mailbox-list, some modules such as Mail::Address
may be used.
.IP "\(bu" 4
Lines are delimited with \s-1LF\s0 (\f(CW"\en"\fR).
\&\s-1RFC5322\s0 states that lines in Internet messages are delimited with
\&\s-1CRLF\s0 (\f(CW"\er\en"\fR).
.SH "BUGS"
.IX Header "BUGS"
Please report bugs or buggy behaviors to developer.
.PP
\&\s-1CPAN\s0 Request Tracker:
<http://rt.cpan.org/Public/Dist/Display.html?Name=MIME\-EncWords>.
.SH "VERSION"
.IX Header "VERSION"
Consult \f(CW$VERSION\fR variable.
.PP
\&\fBThis is experimental release\fR.
Features might be changed in the near future.
.PP
Development versions of this package may be found at
<http://hatuka.nezumi.nu/repos/MIME\-EncWords/>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Encode, Encode::MIME::Header, MIME::EncWords.
.PP
\&\s-1RFC 2047\s0 \fI\s-1MIME\s0 (Multipurpose Internet Mail Extensions) Part Three:
Message Header Extensions for Non-ASCII Text\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Hatuka*nezumi \- \s-1IKEDA\s0 Soji <hatuka(at)nezumi.nu>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2011 Hatuka*nezumi \- \s-1IKEDA\s0 Soji.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
