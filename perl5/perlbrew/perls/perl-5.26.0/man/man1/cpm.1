.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CPM 1"
.TH CPM 1 "2022-04-26" "perl v5.26.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cpm \- a fast CPAN module installer
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # install modules into local/
\&  > cpm install Module1 Module2 ...
\&
\&  # install modules with verbose messages
\&  > cpm install \-v Module
\&
\&  # from cpanfile (with cpanfile.snapshot if any)
\&  > cpm install
\&
\&  # install module into current @INC instead of local/
\&  > cpm install \-g Module
\&
\&  # read modules from STDIN by specifying "\-" as an argument
\&  > echo Module1 Module2 | cpm install \-
\&
\&  # prefer TRIAL release
\&  > cpm install \-\-dev Moose
\&
\&  # install modules as if version of your perl is 5.8.5
\&  # so that modules which are not core in 5.8.5 will be installed
\&  > cpm install \-\-target\-perl 5.8.5
\&
\&  # resolve distribution names from DARKPAN/modules/02packages.details.txt.gz
\&  # and fetch distibutions from DARKPAN/authors/id/...
\&  > cpm install \-\-resolver 02packages,http://example.com/darkpan Your::Module
\&  > cpm install \-\-resolver 02packages,file:///path/to/darkpan    Your::Module
\&
\&  # use darkpan first, and if it fails, use metadb and normal CPAN
\&  > cpm install \-\-resolver 02packages,http://example.com/darkpan \-\-resolver metadb Your::Module
\&
\&  # specify types/phases in cpanfile by "\-\-with\-*" and "\-\-without\-*" options
\&  > cpm install \-\-with\-recommends \-\-without\-test
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.Vb 10
\&  \-w, \-\-workers=N
\&        number of workers, default: 5
\&  \-L, \-\-local\-lib\-contained=DIR
\&        directory to install modules into, default: local/
\&  \-g, \-\-global
\&        install modules into current @INC instead of local/
\&  \-v, \-\-verbose
\&        verbose mode; you can see what is going on
\&      \-\-prebuilt, \-\-no\-prebuilt
\&        save builds for CPAN distributions; and later, install the prebuilts if available
\&        default: on; you can also set $ENV{PERL_CPM_PREBUILT} false to disable this option
\&      \-\-target\-perl=VERSION  (EXPERIMENTAL)
\&        install modules as if verison is your perl is VERSION
\&      \-\-mirror=URL
\&        base url for the CPAN mirror to use, cannot be used multiple times. Use \-\-resolver instead.
\&        default: https://cpan.metacpan.org
\&      \-\-pp, \-\-pureperl\-only
\&        prefer pureperl only build
\&      \-\-static\-install, \-\-no\-static\-install
\&        enable/disable the static install, default: enable
\&  \-r, \-\-resolver=class,args (EXPERIMENTAL, will be removed or renamed)
\&        specify resolvers, you can use \-\-resolver multiple times
\&        available classes: metadb/metacpan/02packages/snapshot
\&      \-\-reinstall
\&        reinstall the distribution even if you already have the latest version installed
\&      \-\-dev (EXPERIMENTAL)
\&        resolve TRIAL distributions too
\&      \-\-color, \-\-no\-color
\&        turn on/off color output, default: on
\&      \-\-test, \-\-no\-test
\&        run test cases, default: no
\&      \-\-man\-pages
\&        generate man pages
\&      \-\-retry, \-\-no\-retry
\&        retry configure/build/test/install if fails, default: retry
\&      \-\-show\-build\-log\-on\-failure
\&        show build.log on failure, default: off
\&      \-\-configure\-timeout=sec, \-\-build\-timeout=sec, \-\-test\-timeout=sec
\&        specify configure/build/test timeout second, default: 60sec, 3600sec, 1800sec
\&      \-\-show\-progress, \-\-no\-show\-progress
\&        show progress, default: on
\&      \-\-cpanfile=path
\&        specify cpanfile path, default: ./cpanfile
\&      \-\-snapshot=path
\&        specify cpanfile.snapshot path, default: ./cpanfile.snapshot
\&  \-V, \-\-version
\&        show version
\&  \-h, \-\-help
\&        show this help
\&      \-\-feature=identifier
\&        specify the feature to enable in cpanfile; you can use \-\-feature multiple times
\&      \-\-with\-requires,   \-\-without\-requires   (default: with)
\&      \-\-with\-recommends, \-\-without\-recommends (default: without)
\&      \-\-with\-suggests,   \-\-without\-suggests   (default: without)
\&      \-\-with\-configure,  \-\-without\-configure  (default: without)
\&      \-\-with\-build,      \-\-without\-build      (default: with)
\&      \-\-with\-test,       \-\-without\-test       (default: with)
\&      \-\-with\-runtime,    \-\-without\-runtime    (default: with)
\&      \-\-with\-develop,    \-\-without\-develop    (default: without)
\&        specify types/phases of dependencies in cpanfile to be installed
\&      \-\-with\-all
\&        shortcut for \-\-with\-requires, \-\-with\-recommends, \-\-with\-suggests,
\&        \-\-with\-configure, \-\-with\-build, \-\-with\-test, \-\-with\-runtime and \-\-with\-develop
.Ve
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2015 Shoichi Kaji <skaji@cpan.org>
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
